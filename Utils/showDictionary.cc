//***********************************************************************
//***********************************************************************
//    ____  ____  _____  _______     ___      ______       __
//   |_   ||   _||_   _||_   __ \  .'   `.   / ____ `.    /  |
//     | |__| |    | |    | |__) |/  .-.  \  `'  __) |    `| |
//     |  __  |    | |    |  ___/ | |   | |  _  |__ '.     | |
//    _| |  | |_  _| |_  _| |_    \  `-'  / | \____) | _  _| |_
//   |____||____||_____||_____|    `.___.'   \______.'(_)|_____|
//
//=======================================================================
// Autogenerated code by HIPO 3.1 io library
// Modify the main loop to suite your needs
// Date: 07/17/2018
// Author: G.Gavalian
//***********************************************************************
#include <cstdlib>
#include <iostream>
#include "TFile.h"
#include "TTree.h"
#include "reader.h"
#include "node.h"
#include "bank.h"

int main(int argc, char** argv) {

   std::cout << " reading file example program (HIPO) " << std::endl;

   char inputFile[256];
   char outputFile[256];

   if(argc>2) {
      sprintf(inputFile,"%s",argv[1]);
      sprintf(outputFile,"%s",argv[2]);
   } else {
      std::cout << " *** please provide a file name..." << std::endl;
     exit(0);
   }

   hipo::reader  reader;
   reader.open(inputFile);

   hipo::dictionary *dictionary = reader.getSchemaDictionary();
   dictionary->ls();

   hipo::schema schema = dictionary->getSchema("REC::Particle");
   schema.ls();

   std::vector<std::string> entries = schema.getEntryList();
   /*printf(" Entries List = %lu\n" , entries.size());
   for(int i = 0; i < entries.size(); i++){
     printf(" %d ----> %s\n",i,entries[i].c_str());
   }*/

   hipo::bank  recBank("REC::Particle",reader);

   while(reader.next()==true){
      recBank.show();
      int k = 0;
      int size = recBank.getSize();
      for(int i = 0; i < size ; i++){
        printf("%12d ", recBank.getInt(0,i));
        k += recBank.getInt(0,i);
      }
      printf("\n");
      /*for(int i = 0; i < size ; i++){
        printf("%12d ", recBank.getInt(10,i));
      }
      printf("\n");

      for(int i = 0; i < size ; i++){
        printf("%12.4f ", recBank.getFloat(1,i));
      }
      printf("\n");*/
   }

}
//### END OF GENERATED CODE
