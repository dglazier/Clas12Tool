//***********************************************************************
//***********************************************************************
//  HIPO 4.0
//=======================================================================
// Autogenerated code by HIPO 4.0 io library
// Modify the main loop to suite your needs
// Date: 07/17/2018
// Author: G.Gavalian
//***********************************************************************
#include <cstdlib>
#include <iostream>
#include <TBenchmark.h>
#include "reader.h"



int main(int argc, char** argv) {

   std::cout << " reading file example program (HIPO) "  << __cplusplus << std::endl;

   char inputFile[256];

   if(argc>1) {
      sprintf(inputFile,"%s",argv[1]);
      //sprintf(outputFile,"%s",argv[2]);
   } else {
      std::cout << " *** please provide a file name..." << std::endl;
     exit(0);
   }
   //open hipo4 file for reading
   hipo::reader  reader;
   reader.open(inputFile);

   //read dictionary ~ bank configuration
   hipo::dictionary  factory;
   reader.readDictionary(factory);
   
   //event for holding data
   hipo::event      event;
   //particular bank we are interested in
   hipo::bank PART(factory.getSchema("REC::Particle"));

   while(reader.next()==true){//loop over all events
     reader.read(event); //read event
     event.getStructure(PART); //get particle data
  
      int nrows = PART.getRows();

      for(int i = 0; i < nrows; i++){
        int   pid = PART.getInt("pid",i);
        float  px = PART.getFloat("px",i);
        float  py = PART.getFloat("py",i);
        float  pz = PART.getFloat("pz",i);

       }
   }
   //   rbenchmark->Stop("timer");
   //rbenchmark->Print("timer");
  printf("processed events = %d\n",counter);
/*
   int counter = 0;
   while(reader.next()==true){

     std::pair<int,int> index = reader.getEvent()->getStructurePosition(20100,11);
     printf("reading event # %d  DC::tdc position = %d length %d\n",counter,index.first, index.second);

     reader.getEvent()->getStructure(str,20100,11);
     str.show();
     counter++;
   }
   printf(" events read = %d\n",counter);*/
}
//### END OF GENERATED CODE
